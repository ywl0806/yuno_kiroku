// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/photo": {
            "get": {
                "description": "get photo list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "skip",
                        "name": "skip",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/photo/first": {
            "get": {
                "description": "get first photo",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/photo/group": {
            "get": {
                "description": "get photo group by date",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z",
                        "description": "from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-05-01T00:00:00Z",
                        "description": "to",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/photo/range": {
            "get": {
                "description": "get photo range",
                "responses": {}
            }
        },
        "/photo/upload": {
            "post": {
                "description": "upload photo",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/photo/upload-live": {
            "post": {
                "description": "upload live photo",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "photo",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "live",
                        "name": "live",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
